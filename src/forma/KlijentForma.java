/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import nit.NitPrijem;

/**
 *
 * @author Nadja
 */
public class KlijentForma extends javax.swing.JFrame {

    int duzinaPostavljanja = 4;
    int brojBrodova = 0;
    LinkedList<String> postavljeniBrodici = new LinkedList<>();
    Socket sock;

    /**
     * Creates new form Forma
     */
    public KlijentForma() {
        initComponents();
        init();
        init2();
        postavi();
        jButton1.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lbl_poruka = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lbl_igrac = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btn_orientation = new javax.swing.JButton();
        lbl_rotate = new javax.swing.JLabel();
        lbl_protivnik = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jSplitPane1.setDividerLocation(350);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());
        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        lbl_poruka.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_poruka.setText("jLabel1");

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbl_igrac.setText("Vas rezultat je: 0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbl_poruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_igrac)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_poruka)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(lbl_igrac)
                .addGap(19, 19, 19))
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());
        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        btn_orientation.setText("Rotate");
        btn_orientation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_orientationMouseClicked(evt);
            }
        });
        btn_orientation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_orientationActionPerformed(evt);
            }
        });

        lbl_rotate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_rotate.setText("jLabel1");

        lbl_protivnik.setText("Protivnikov rezultat je: 0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_rotate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addComponent(btn_orientation)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_protivnik)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_rotate)
                    .addComponent(btn_orientation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(lbl_protivnik)
                .addContainerGap())
        );

        jPanel2.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setRightComponent(jPanel2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    BufferedReader in;
    PrintWriter out;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {
            sock = new Socket("localhost", 9090);
            in = new BufferedReader(new InputStreamReader(sock.getInputStream()));
            out = new PrintWriter(sock.getOutputStream(), true);
            String brodici = "";
            System.out.println("Duzina brodica je " + postavljeniBrodici.size());
            for (int i = 0; i < postavljeniBrodici.size(); i++) {
                String brod = postavljeniBrodici.get(i);
                brodici = brodici + brod + "#";
            }
            out.println(brodici);

            new NitPrijem(in, this).start();

        } catch (IOException ex) {
            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    public int rotacija = 0;
    private void btn_orientationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_orientationMouseClicked

    }//GEN-LAST:event_btn_orientationMouseClicked

    private void btn_orientationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_orientationActionPerformed
        // TODO add your handling code here:
        rotacija++;
        if (rotacija % 2 != 0) {
            lbl_rotate.setText("Vertikalna orjentacija");
        } else {
            lbl_rotate.setText("Horizontalna orjentacija");

        }
    }//GEN-LAST:event_btn_orientationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KlijentForma().setVisible(true);
            }
        });
    }
    public JTextField[][] nizField;
    public JTextField[][] nizField2;
    int rezultatIgrac = 0;
    int rezultatProtivnik = 0;
    boolean dozvoljenPotez = false;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_orientation;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lbl_igrac;
    private javax.swing.JLabel lbl_poruka;
    private javax.swing.JLabel lbl_protivnik;
    private javax.swing.JLabel lbl_rotate;
    // End of variables declaration//GEN-END:variables

    private void init() {
        nizField = new JTextField[10][10];
        for (int i = 0; i < nizField.length; i++) {
            for (int j = 0; j < 10; j++) {
                nizField[i][j] = new JTextField(i + "," + j);
//                nizField[i][j].setXY(i,j);
                nizField[i][j].setEditable(false);
                GridBagConstraints gridBagConstraints = new GridBagConstraints();
                gridBagConstraints.gridx = i;
                gridBagConstraints.gridy = j;
                jPanel3.add(nizField[i][j], gridBagConstraints);

                nizField[i][j].addMouseListener(new java.awt.event.MouseAdapter() {

                    @Override

                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        if (dozvoljenPotez) {
                            JTextField klik = (JTextField) evt.getSource();
                            System.out.println(klik.getText());
                            out.println(klik.getText());
                        }
                    }
                });

            }

        }

    }

    private void init2() {
        nizField2 = new JTextField[10][10];
        lbl_rotate.setText("Horizontalna orjentacija");

        for (int a = 0; a < nizField2.length; a++) {
            for (int b = 0; b < nizField2.length; b++) {
                nizField2[a][b] = new JTextField(a + "," + b);
                nizField2[a][b].setEditable(false);
                GridBagConstraints gridBagConstraints2 = new GridBagConstraints();
                gridBagConstraints2.gridx = a;
                gridBagConstraints2.gridy = b;
                jPanel5.add(nizField2[a][b], gridBagConstraints2);

                nizField2[a][b].addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        JTextField klik2 = (JTextField) evt.getSource();
                        System.out.println(klik2.getText());
                        postaviBrod(klik2.getText());

                    }

                });
            }
        }

    }

    void postavi() {
        if (duzinaPostavljanja == 0) {
            lbl_poruka.setText("Igra moze da pocne!");
            jButton1.setEnabled(true);
            return;
        }
        lbl_poruka.setText("Kliknite da postavite brod duzine " + duzinaPostavljanja);

    }

    void postaviBrod(String text) {
        String[] txt = text.split(",");
        int x = Integer.parseInt(txt[0]);
        int y = Integer.parseInt(txt[1]);

        if (duzinaPostavljanja == 0) {
            return;
        }
        if (rotacija % 2 == 0) {
            if (x + duzinaPostavljanja > 10) {
                JOptionPane.showMessageDialog(rootPane, "Nema dovoljno prostora, biraj ponovo!");
                return;
            }
            for (int i = 0; i < duzinaPostavljanja; i++) {
                if (nizField2[x + i][y].getBackground() == Color.GREEN) {
                    JOptionPane.showMessageDialog(rootPane, "Zauzeto mesto, biraj ponovo!");
                    return;
                }
            }
            for (int i = 0; i < duzinaPostavljanja; i++) {
                nizField2[x + i][y].setBackground(Color.GREEN);
                postavljeniBrodici.add(x + i + "," + y);

            }
        } else {
            if (y + duzinaPostavljanja > 10) {
                JOptionPane.showMessageDialog(rootPane, "Nema dovoljno prostora, biraj ponovo!");
                return;
            }
            for (int i = 0; i < duzinaPostavljanja; i++) {
                if (nizField2[x][y + i].getBackground() == Color.GREEN) {
                    JOptionPane.showMessageDialog(rootPane, "Zauzeto mesto, biraj ponovo!");
                    return;
                }
            }
            for (int j = 0; j < duzinaPostavljanja; j++) {
                nizField2[x][y + j].setBackground(Color.GREEN);
                postavljeniBrodici.add(x + "," + y + j);

            }

        }

        brojBrodova++;

        if (brojBrodova == 1 || brojBrodova == 2) {
            duzinaPostavljanja = 3;
        } else if (brojBrodova == 3 || brojBrodova == 4 || brojBrodova == 5) {
            duzinaPostavljanja = 2;
        } else if (brojBrodova >= 6 && brojBrodova <= 9) {
            duzinaPostavljanja = 1;
        } else if (brojBrodova >= 10) {
            duzinaPostavljanja = 0;
        }
        postavi();

    }

    public void prijem(String unos) {
        System.out.println(unos);
        if (unos.equals("Pucaj!")) {
            lbl_poruka.setText("Pucaj!");
            dozvoljenPotez = true;
            return;
        } else if (unos.equals("Cekaj")) {
            lbl_poruka.setText("Cekaj");
            dozvoljenPotez = false;
            return;
        }
        String[] un = unos.split(",");
        int x = Integer.parseInt(un[1]);
        int y = Integer.parseInt(un[2]);
        if (unos.startsWith("pogodio")) {
            nizField[x][y].setBackground(Color.red);
            rezultatIgrac++;
            lbl_poruka.setText("Pucaj!");
            dozvoljenPotez = true;
            lbl_igrac.setText("Vas rezultat je: " + rezultatIgrac);
            if (rezultatIgrac == 20) {
                pobedio();
            }
        } else if (unos.startsWith("pogodjen")) {
            nizField2[x][y].setBackground(Color.red);
            lbl_poruka.setText("Cekaj");
            rezultatProtivnik++;
            lbl_protivnik.setText("Protivnikov rezultat je: " + rezultatProtivnik);
            dozvoljenPotez = false;
            if (rezultatProtivnik == 20) {
                izgubio();
            }
        } else if (unos.startsWith("promasio")) {
            nizField[x][y].setBackground(Color.blue);
            lbl_poruka.setText("Cekaj");
            dozvoljenPotez = false;
        } else if (unos.startsWith("promasen")) {
            nizField2[x][y].setBackground(Color.blue);
            lbl_poruka.setText("Pucaj!");
            dozvoljenPotez = true;
        }

    }

    private void pobedio() {
        try {
            JOptionPane.showMessageDialog(rootPane, "Pobedili ste! Igra je gotova");
            in.close();
            out.close();
            sock.close();
        } catch (IOException ex) {
            System.out.println("Kraj igre");
        }
        resetujIgru();
    }

    private void izgubio() {
        try {
            JOptionPane.showMessageDialog(rootPane, "Izgubili ste! Igra je gotova");
            in.close();
            out.close();
            sock.close();
        } catch (IOException ex) {
            System.out.println("Kraj igre");
        }
        resetujIgru();

    }

    private void resetujIgru() {
        for (int i = 0; i < nizField.length; i++) {
            for (int j = 0; j < 10; j++) {
                nizField[i][j].setBackground(Color.white);
                nizField2[i][j].setBackground(Color.white);

            }

        }
        rezultatIgrac = 0;
        rezultatProtivnik = 0;
        duzinaPostavljanja = 4;
        brojBrodova = 0;
        postavi();
        lbl_igrac.setText("Vas rezultat je: " + rezultatIgrac);
        lbl_protivnik.setText("Protivnikov rezultat je: " + rezultatProtivnik);
        postavljeniBrodici = new LinkedList<>();

    }

}
